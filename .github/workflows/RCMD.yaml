on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com"}
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_LIBS_USER: /tmp/Library # Use /tmp for Linux/macOS or %TEMP% for Windows

    steps:
      - uses: actions/checkout@v2

      - name: Set up R
        uses: r-lib/actions/setup-r@v2-branch
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install R dependencies
        run: |
          install.packages("remotes", repos = "https://cran.rstudio.com")
          remotes::install_cran(c("topics", "rcmdcheck", "devtools", "dplyr", "tidyr", "ggplot2",
                                   "ggrepel", "cowplot", "parsnip", "recipes", "rsample",
                                   "reticulate", "tune", "workflows", "yardstick",
                                   "future", "furrr"))
        shell: Rscript {0}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev
        shell: bash

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install libxml2 curl openssl
        shell: bash

      - name: Verify Installation
        run: |
          required_packages <- c("topics", "rcmdcheck", "devtools", "dplyr", "tidyr", "ggplot2",
                                 "ggrepel", "cowplot", "parsnip", "recipes", "rsample",
                                 "reticulate", "tune", "workflows", "yardstick",
                                 "future", "furrr")
          not_installed <- setdiff(required_packages, rownames(installed.packages()))
          if (length(not_installed) > 0) {
            stop("Some required packages are not installed: ", paste(not_installed, collapse = ", "))
          }
        shell: Rscript {0}

      - name: Run R CMD Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"))
        shell: Rscript {0}
